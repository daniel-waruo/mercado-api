# Generated by Django 3.2.6 on 2021-11-14 18:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('buyers', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('prep', 'Preparing'), ('ship', 'On Transit'), ('fin', 'Delivery Finished'), ('can', 'Delivery Cancelled')], default='prep', max_length=4)),
                ('payment_status', models.CharField(choices=[('success', 'Successful Payment'), ('failed', 'Payment Failed '), ('pending', 'Payment Pending ')], default='pending', max_length=10)),
                ('payment_method', models.CharField(choices=[('m-pesa', 'M-Pesa'), ('on-delivery', 'On Delivery')], default='on-delivery', max_length=15)),
                ('channel', models.CharField(choices=[('ussd', 'USSD'), ('sms', 'SMS'), ('whatsapp', 'Whatsapp')], default='whatsapp', max_length=15)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='buyers.buyer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, 'Quantity cannot be less than one')])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_items', to='products.product')),
            ],
            options={
                'unique_together': {('order', 'product')},
            },
        ),
    ]
